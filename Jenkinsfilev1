pipeline {
    agent any
	tools {
        maven 'localmaven'
    }
	
	def jira_id_map = "";
    
	stages{
	
		stage('Input Jira Id') {
			steps {
				script {
					try {
						timeout(time:30, unit:'SECONDS') {
							jira_id_map = input(message: 'Enter Jira Id (or leave blank) and press [Proceed]!!', parameters: [[$class: 'TextParameterDefinition', defaultValue: '', description: '', name: 'Jira Id']], submitterParameter: 'APPROVER')
							echo ("User has following jira id= " + jira_id_map['Jira Id'] + ", and is approved by= " + jira_id_map['APPROVER'])
						}
					} catch (err) {
					
					}
				}
			}
		}
		
		stage('Cleaning') {
			 steps {
				bat 'mvn clean'
            }
		}
		
		stage('Running Unit Tests') {
			 steps {
				bat 'mvn test'
            }
			post {
                failure {
                    echo ' Unit test cases failed. Creating jira ticket.'
                }
            }
		}
		
        stage('Build') {
            steps {
				bat 'mvn clean package'
            }
            post {
                success {
                    echo 'Now Archiving'
					echo ("User has following jira id= " + jira_id_map['Jira Id'] + ", and is approved by= " + jira_id_map['APPROVER'])
                    archiveArtifacts artifacts: '**/target/*.jar'
                }
            }
        }
		
        stage ('Deploy to Staging') {
			steps {
				echo 'Deploying to staging.'
			}
        }
		
		stage ('Deploy to Production') {
            steps {
				echo 'Deploying to production.'
			}
        }
		
    }
}